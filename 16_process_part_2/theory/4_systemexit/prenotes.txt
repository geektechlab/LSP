With ISO C, a process can register at least 32 functions that are automatically called by exit

These are called exit handlers and are registered by calling the atexit function.

#include <stdlib.h>
int atexit(void (*func)(void));
Returns: 0 if OK, nonzero on error

The exit function calls these functions in reverse order of their registration.

Each function is called as many times as it was registered.
With ISO C and POSIX.1, exit first calls the exit handlers and then closes (via fclose) all open streams.

Usecase:
=================
Free memory allocated using malloc()
