There is one clear pattern: the size of the malloc'ed memory chunk is always found in the preceding 0x10 bytes.

For instance, the first malloc call is malloc'ing 1024 (0x0400) bytes and we can find 11 04 00 00 00 00 00 00 in the preceding 0x10 bytes. 

Those last bytes represent the number 0x 00 00 00 00 00 00 04 11 = 0x400 (1024) + 0x10 (the block size preceding those 1024 bytes + 1 (we'll talk about this "+1" later)

 If we look at each 0x10 bytes preceding the addresses returned by malloc, they all contain the size of the chunk of memory asked to malloc + 0x10 + 1.

we can probably guess that those 0x10 bytes are a sort of data structure used by malloc (and free) to deal with the heap
