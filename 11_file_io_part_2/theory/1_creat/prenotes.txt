#include <fcntl.h>
int creat(const char *path, mode_t mode);

Returns: file descriptor opened for write-only if OK, −1 on error

Note that this function is equivalent to
open(path, O_WRONLY | O_CREAT | O_TRUNC, mode);

Historically, in early versions of the UNIX System, the second argument to open could be only 0, 1, or 2. There was no way to open a file that didn’t already exist. Therefore, a separate system call, creat, was needed to create new files.

With the O_CREAT and O_TRUNC options now provided by open, a separate creat function is no longer needed

One deficiency with creat is that the file is opened only for writing. Before the new version of open was provided, if we were creating a temporary file that we wanted to write and then read back, we had to call creat, close, and then open

A better way is to use the open function, as in
open(path, O_RDWR | O_CREAT | O_TRUNC, mode);
